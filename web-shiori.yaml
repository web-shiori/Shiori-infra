AWSTemplateFormatVersion: 2010-09-09
Description: infra for web shiori

Resources:
  # lambdaのコードを保存するS3バケット
  LambdaCodeS3Bucket:
    Type: AWS::S3::Bucket

  # スクリーンショットを保存するS3バケット
  ScreenShotS3Bucket:
    Type: AWS::S3::Bucket

  # 保存されたPDFのスクリーンショットからページ番号を抽出するLambda関数
  # コードは https://github.com/web-shiori/Shiori-lambda/tree/main/lambda-page-number-extract を参照
  # (テスト用に./testのlambda関数を暫定で設定してある)
  ExtractPDFPageNumberFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: extract_PDF_page_number_function
      Handler: sample-lambda
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: sample-lambda.zip
      Runtime: go1.x

  # Lambdaの実行ロール
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
#      ManagedPolicyArns:
#        # CloudWatch Log Groupの権限
#        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
# NOTE: ↑これつけたらアップデートがスタックする。後で試す

  # CloudWatch Log Group

# S3にファイル保存→lambda実行→ログを書き込むまでできればOK
# S3にファイル保存したらlambda実行するようにする
# ↑をログに書き込む

Outputs:
  LambdaCodeS3BucketURL:
    Value: !Ref LambdaCodeS3Bucket
    Description: Name of lambda S3 Bucket
  ScreenShotS3BucketURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - ScreenShotS3Bucket
          - DomainName
    Description: Name of ScreenShotS3 Bucket

